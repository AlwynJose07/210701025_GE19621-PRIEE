SOURCE CODE:

	JavaScript file

import { GoogleGenerativeAI, HarmCategory, HarmBlockThreshold } from "@google/generative-ai";
import chalk from 'chalk';
import ora from 'ora';
import prompt from 'prompt-sync';

const promptSync = prompt();

const MODEL_NAME = "gemini-1.0-pro";
const API_KEY = "AIzaSyAkinMfc8GoL790P5dpanGcehYPe_ifNiU";
const GENERATION_CONFIG = {
    temperature: 0.9,
    topK: 1,
    topP: 1,
    maxOutputTokens: 2048,
};
const SAFETY_SETTINGS = [
    { category: HarmCategory.HARM_CATEGORY_HARASSMENT, threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE },
    { category: HarmCategory.HARM_CATEGORY_HATE_SPEECH, threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE },
    { category: HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT, threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE },
    { category: HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT, threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE },
];

async function runChat() {
    const spinner = ora('Initializing chat...').start();
    try {
        const genAI = new GoogleGenerativeAI(API_KEY);
        const model = genAI.getGenerativeModel({ model: MODEL_NAME });

        const chat = model.startChat({
            generationConfig: GENERATION_CONFIG,
            safetySettings: SAFETY_SETTINGS,
            history: [],
        });

        spinner.stop();

        while (true) {
            const userInput = promptSync(chalk.green('You: '));
            if (userInput.toLowerCase() === 'exit') {
                console.log(chalk.yellow('Goodbye!'));
                process.exit(0);
            }
            const result = await chat.sendMessage(userInput);
            if (result.error) {
                console.error(chalk.red('AI Error:'), result.error.message);
                continue;
            }
            const response = result.response.text();
            console.log(chalk.blue('AI:'), response);
        }
    } catch (error) {
        spinner.stop();
        console.error(chalk.red('An error occurred:'), error.message);
        process.exit(1);
    }
}
runChat();
HTML file

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatbot</title>
    <link rel="stylesheet" href="styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha384-m5l/EcNzVEPaj8sSevviO/4u5iV+ArO4N9igxIqm4lAQ6xFU1CS2Y7bkWGcJwXRB" crossorigin="anonymous">

    <style>
        body { font-family: Arial, sans-serif; }
        .chat-container { width: 300px; margin: 50px auto; }
        .messages { border: 1px solid #ccc; padding: 10px; height: 200px; overflow-y: scroll; }
        .input-box { margin-top: 10px; }
    </style>
</head>
<body>
    <div class="header">
        <div class="logo">
            <img src="https://www.mobihealthnews.com/sites/default/files/Screen%20Shot%202017-06-06%20at%202.52.59%20PM.png" alt="Logo">
        </div>
        <h1 class="project-title">Mental Health Chatbot</h1>
    </div>
    <div class="chat-container">
        <div class="messages" id="messages"></div>
        <div class="input-box">
            <input type="text" id="user-input" placeholder="Type a message..." />
            <button onclick="sendMessage()"><i class="fas fa-paper-plane icon"></i>Send</button>
        </div>
    </div>
    <script src="script.js"></script>
    <script>
        async function sendMessage() {
            const userInput = document.getElementById('user-input').value;
            const response = await fetch('/chat', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ message: userInput })
            });
            const data = await response.json();
            const messages = document.getElementById('messages');
            messages.innerHTML += `<div><b>You:</b> ${userInput}</div>`;
            messages.innerHTML += `<div><b>Bot:</b> ${data.response}</div>`;
            document.getElementById('user-input').value = '';
            messages.scrollTop = messages.scrollHeight;
        }
    </script>
</body>
</html>
